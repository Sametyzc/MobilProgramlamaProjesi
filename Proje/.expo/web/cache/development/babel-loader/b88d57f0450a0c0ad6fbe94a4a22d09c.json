{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MONSTER\\\\Desktop\\\\MobilProgramlamaProjesi\\\\Proje\\\\node_modules\\\\react-native-color-palette\\\\src\\\\color-option.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"./icon\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar ColorOption = function ColorOption(props) {\n  var icon = props.icon,\n      color = props.color,\n      isSelected = props.isSelected,\n      scaleToWindow = props.scaleToWindow,\n      onColorChange = props.onColorChange;\n  var scaledWidth = width * .025;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onColorChange(color);\n    },\n    style: [styles.colorOption, {\n      backgroundColor: color\n    }, scaleToWindow && {\n      width: width * .07,\n      height: width * .07,\n      marginHorizontal: scaledWidth,\n      marginVertical: scaledWidth,\n      borderRadius: scaledWidth * 2\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, isSelected && React.createElement(Icon, {\n    color: color,\n    icon: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  colorOption: {\n    borderWidth: 1,\n    borderColor: 'rgba(0,0,0,0.2)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 30,\n    height: 30,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 15,\n    elevation: 5,\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowColor: 'black',\n    shadowOpacity: .25\n  }\n});\nColorOption.propTypes = {\n  icon: PropTypes.node,\n  color: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  scaleToWindow: PropTypes.bool.isRequired,\n  onColorChange: PropTypes.func.isRequired\n};\nexport default ColorOption;","map":{"version":3,"sources":["C:/Users/MONSTER/Desktop/MobilProgramlamaProjesi/Proje/node_modules/react-native-color-palette/src/color-option.js"],"names":["React","PropTypes","Icon","Dimensions","get","width","ColorOption","props","icon","color","isSelected","scaleToWindow","onColorChange","scaledWidth","styles","colorOption","backgroundColor","height","marginHorizontal","marginVertical","borderRadius","StyleSheet","create","borderWidth","borderColor","alignItems","justifyContent","elevation","shadowOffset","shadowColor","shadowOpacity","propTypes","node","string","isRequired","bool","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAGA,OAAOC,IAAP;;sBAEkBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAAA,K;;AAER,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MACrBC,IADqB,GACqCD,KADrC,CACrBC,IADqB;AAAA,MACfC,KADe,GACqCF,KADrC,CACfE,KADe;AAAA,MACRC,UADQ,GACqCH,KADrC,CACRG,UADQ;AAAA,MACIC,aADJ,GACqCJ,KADrC,CACII,aADJ;AAAA,MACmBC,aADnB,GACqCL,KADrC,CACmBK,aADnB;AAE7B,MAAIC,WAAW,GAAGR,KAAK,GAAG,IAA1B;AACA,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMO,aAAa,CAACH,KAAD,CAAnB;AAAA,KADX;AAEE,IAAA,KAAK,EAAE,CACLK,MAAM,CAACC,WADF,EAEL;AAAEC,MAAAA,eAAe,EAAEP;AAAnB,KAFK,EAGLE,aAAa,IAAI;AACfN,MAAAA,KAAK,EAAEA,KAAK,GAAG,GADA;AAEfY,MAAAA,MAAM,EAAEZ,KAAK,GAAG,GAFD;AAGfa,MAAAA,gBAAgB,EAAEL,WAHH;AAIfM,MAAAA,cAAc,EAAEN,WAJD;AAKfO,MAAAA,YAAY,EAAEP,WAAW,GAAG;AALb,KAHZ,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGH,UAAU,IAAK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,KAAb;AAAoB,IAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdlB,CADF;AAkBD,CArBD;;AAuBA,IAAMM,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,WAAW,EAAE;AACXQ,IAAAA,WAAW,EAAE,CADF;AAEXC,IAAAA,WAAW,EAAE,iBAFF;AAGXC,IAAAA,UAAU,EAAE,QAHD;AAIXC,IAAAA,cAAc,EAAE,QAJL;AAKXrB,IAAAA,KAAK,EAAE,EALI;AAMXY,IAAAA,MAAM,EAAE,EANG;AAOXC,IAAAA,gBAAgB,EAAE,EAPP;AAQXC,IAAAA,cAAc,EAAE,EARL;AASXC,IAAAA,YAAY,EAAE,EATH;AAUXO,IAAAA,SAAS,EAAE,CAVA;AAWXC,IAAAA,YAAY,EAAE;AAAEvB,MAAAA,KAAK,EAAE,CAAT;AAAYY,MAAAA,MAAM,EAAE;AAApB,KAXH;AAYXY,IAAAA,WAAW,EAAE,OAZF;AAaXC,IAAAA,aAAa,EAAE;AAbJ;AADkB,CAAlB,CAAf;AAkBAxB,WAAW,CAACyB,SAAZ,GAAwB;AACtBvB,EAAAA,IAAI,EAAEP,SAAS,CAAC+B,IADM;AAEtBvB,EAAAA,KAAK,EAAER,SAAS,CAACgC,MAAV,CAAiBC,UAFF;AAGtBxB,EAAAA,UAAU,EAAET,SAAS,CAACkC,IAAV,CAAeD,UAHL;AAItBvB,EAAAA,aAAa,EAAEV,SAAS,CAACkC,IAAV,CAAeD,UAJR;AAKtBtB,EAAAA,aAAa,EAAEX,SAAS,CAACmC,IAAV,CAAeF;AALR,CAAxB;AAQA,eAAe5B,WAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { TouchableOpacity, Dimensions, StyleSheet } from 'react-native'\n\nimport Icon from './icon';\n\nconst { width } = Dimensions.get('window');\n\nconst ColorOption = (props) => {\n  const { icon, color, isSelected, scaleToWindow, onColorChange } = props;\n  let scaledWidth = width * .025;\n  return (\n    <TouchableOpacity\n      onPress={() => onColorChange(color)}\n      style={[\n        styles.colorOption,\n        { backgroundColor: color },\n        scaleToWindow && {\n          width: width * .07,\n          height: width * .07,\n          marginHorizontal: scaledWidth,\n          marginVertical: scaledWidth,\n          borderRadius: scaledWidth * 2\n        }\n      ]}\n    >\n      {isSelected  && <Icon color={color} icon={icon} />}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  colorOption: {\n    borderWidth: 1,\n    borderColor: 'rgba(0,0,0,0.2)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 30,\n    height: 30,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 15,\n    elevation: 5,\n    shadowOffset: { width: 2, height: 2 },\n    shadowColor: 'black',\n    shadowOpacity: .25,\n  }\n});\n\nColorOption.propTypes = {\n  icon: PropTypes.node,\n  color: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  scaleToWindow: PropTypes.bool.isRequired,\n  onColorChange: PropTypes.func.isRequired,\n}\n\nexport default ColorOption;"]},"metadata":{},"sourceType":"module"}